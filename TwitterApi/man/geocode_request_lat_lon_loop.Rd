% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{geocode_request_lat_lon_loop}
\alias{geocode_request_lat_lon_loop}
\title{Find multiple geo-locations from a string}
\usage{
geocode_request_lat_lon_loop(locations = c("London", "Manchester"),
  return_map = TRUE, token = Sys.getenv("LOCATIONIQ_TOKEN"))
}
\arguments{
\item{locations}{Vector of strings. The strings to search in the API. Default = c('London','Manchester')}

\item{return_map}{Boolean. Whether to return a map of the collected coordinates or not}
}
\value{
Dataframe of the response from the API.
}
\description{
This uses the free api from locationIQ. Note the rate limit for this API is 2 requests per second.
See \code{\link{geocode_request}}) for more details.
}
\details{
Most twitter users haven't opted in to using location data for their tweets, but many have location descriptions.
This function is a helper to locate those users.
Optionally, the function can plot those locations on a map.
}
\examples{
twitter_oauth2()
param_list = list(usernames = 'ChelseaFC,ManUtd,LFC,SpursOfficial,Arsenal', format = 'detailed')
result <- generic_api_call(api = 'https://api.twitter.com/labs/1/users', param_list = param_list)
coordinates <- geocode_request_lat_lon_loop(locations = result$data$location, return_map = TRUE)
coordinates$plot # run to see the the plotted results

}
\keyword{api}
\keyword{call}
\keyword{generic}
\keyword{twitter}
